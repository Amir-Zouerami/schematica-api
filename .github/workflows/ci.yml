name: Continuous Integration

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    lint-and-format:
        name: Lint & Format
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v5

            - name: Setup Bun
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version: latest

            - name: Cache Bun dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.bun/install/cache
                  key: bun-${{ runner.os }}-${{ hashFiles('bun.lockb') }}
                  restore-keys: |
                      bun-${{ runner.os }}-

            - name: Install dependencies
              run: bun install --frozen-lockfile

            - name: Run linter
              run: bun run lint

            - name: Check formatting
              run: bun x prettier --check "src/**/*.ts" "test/**/*.ts"

    test:
        name: Run Tests
        runs-on: ubuntu-latest
        needs: lint-and-format

        env:
            NODE_ENV: "test"
            PORT: 3001
            DATABASE_URL: "file:./ci-test.db"

            # --- Secrets ---
            JWT_SECRET: ${{ secrets.JWT_SECRET }}
            JWT_EXPIRATION_TIME: "5m"

            # --- App Config ---
            APP_TITLE: "Schematica CI"
            APP_DESCRIPTION: "API Docs"
            APP_VERSION: "2.0"
            APP_TAG: "Schematica"
            APP_SERVER_URL: "http://localhost:3001"
            APP_GLOBAL_PREFIX: "api"
            APP_DOCS_PATH: "docs"
            CORS_ORIGIN: "*"

        steps:
            - name: Checkout repository
              uses: actions/checkout@v5

            - name: Setup Bun
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version: latest

            - name: Cache Bun dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.bun/install/cache
                  key: bun-${{ runner.os }}-${{ hashFiles('bun.lockb') }}
                  restore-keys: |
                      bun-${{ runner.os }}-

            - name: Install dependencies
              run: bun install --frozen-lockfile

            - name: Run tests
              id: run-tests
              run: bun run test -- --runInBand --coverage

            - name: Upload coverage artifact (on failure)
              if: failure()
              uses: actions/upload-artifact@v4
              with:
                  name: failed-test-coverage
                  path: coverage

    build:
        name: Build Project
        runs-on: ubuntu-latest
        needs: test

        steps:
            - name: Checkout repository
              uses: actions/checkout@v5

            - name: Setup Bun
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version: latest

            - name: Cache Bun dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.bun/install/cache
                  key: bun-${{ runner.os }}-${{ hashFiles('bun.lockb') }}
                  restore-keys: |
                      bun-${{ runner.os }}-

            - name: Install dependencies
              run: bun install --frozen-lockfile

            - name: Build the project
              run: bun run build

            - name: Upload build artifact
              if: success()
              uses: actions/upload-artifact@v4
              with:
                  name: build-dist
                  path: dist
